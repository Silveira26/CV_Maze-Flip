[gd_scene load_steps=6 format=2]

[ext_resource path="res://resources/axe_1handed.obj" type="ArrayMesh" id=1]
[ext_resource path="res://resources/axe_texture.png" type="Texture" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode unshaded, depth_draw_never;

uniform vec4 shine_color : hint_color = vec4( 1.0, 1.0, 1.0, 1.0 );
uniform float cycle_interval : hint_range(0.5, 5.0) = 1.0;
uniform float shine_speed : hint_range(1.0, 5.0) = 3.0;
uniform float shine_width : hint_range(1.0, 100.0) = 3.0;

void fragment( )
{
	vec3 vertex = ( CAMERA_MATRIX * vec4( VERTEX, 1.0 ) ).xyz;
	float width = shine_width * 0.001 * cycle_interval;
	float frequency = floor( sin( vertex.z * cycle_interval + TIME * shine_speed * cycle_interval ) + width );
	ALBEDO = shine_color.rgb;
	ALPHA = clamp( ( 1.0 - dot( NORMAL, VIEW ) ) * frequency * shine_color.a, 0.0, 1.0 );
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/shine_color = Color( 1, 1, 1, 1 )
shader_param/cycle_interval = 1.0
shader_param/shine_speed = 3.0
shader_param/shine_width = 3.0

[sub_resource type="SpatialMaterial" id=3]
next_pass = SubResource( 2 )
albedo_texture = ExtResource( 2 )

[node name="Axe" type="Spatial"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.11071, 0 )

[node name="axe_1handed" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.207675, 0, -0.31318 )
mesh = ExtResource( 1 )
material/0 = SubResource( 3 )
